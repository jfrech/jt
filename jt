#! /bin/zsh

# Jonathan Frech, April to June 2020

jt_repository=""
jt_local="$(dirname "$0")"


fail () {
    echo "Error: $@"
    exit 1 }

require () {
    for cmd in "$@"; do
        [ -z "$(command -v $cmd)" ] \
            && fail "require (): Please install '$cmd'."
    done }

require realpath dirname ln
require printf echo
require grep sed
require mv rm mkdir rmdir
require curl tar
require make gcc git
require xargs
require chmod

require clang

for_all_tools () {
    [ ! "$#" = '1' ] && fail 'for_all_tools (): Invalid arg count.'
    curl --silent --fail "$jt_repository/toolbox/tools.txt" | \
        while read ln; do
            "$1" "$ln";
        done }


list_line () {
    tool="$1"
    printf '['
    # downloaded, extracted, has Makefile, built
    [ -f "$jt_local/toolbox/$tool.tar.gz"   ] && printf 'd' || printf ' '
    [ -d "$jt_local/toolbox/$tool"          ] && printf 'x' || printf ' '
    [ -f "$jt_local/toolbox/$tool/Makefile" ] && printf 'M' || printf ' '
    [ -f "$jt_local/toolbox/$tool/$tool"    ] && printf 'b' || printf ' '
    printf '] %s\n' "$tool" }
list () {
    for_all_tools list_line }

download () {
    [ ! "$#" = '1' ] && fail 'download (): Invalid arg count.'
    tool="$1"
    [ "$tool" = 'all' ] && for_all_tools download && return 0

    mkdir -p "$jt_local/.download"
    curl --fail --silent "$jt_repository/toolbox/$tool.tar.gz" \
        > "$jt_local/.download/$tool.tar.gz" \
        || fail "download (): Failed to download '$tool'."

    mkdir -p "$jt_local/toolbox"
    mv "$jt_local/.download/$tool.tar.gz" "$jt_local/toolbox/$tool.tar.gz" }

build () {
    [ ! "$#" = '1' ] && fail 'build (): Invalid arg count.'
    tool="$1"
    [ "$tool" = 'all' ] && for_all_tools build && return 0

    [ ! -f "$jt_local/toolbox/$tool.tar.gz" ] && download "$tool"

    [ ! -f "$jt_local/toolbox/$tool.tar.gz" ] \
        && fail "build (): Could not find '$jt_local/toolbox/$tool.tar.gz'."
    [ -e "$jt_local/toolbox/$tool" ] \
        && fail "build (): Could not unpack '$tool'" \
            "since '$jt_local/toolbox/$tool' already exists."

    tar -xf "$jt_local/toolbox/$tool.tar.gz" -C "$jt_local/toolbox"
    [ -f "$jt_local/toolbox/$tool/Makefile" ] \
        && make -C "$jt_local/toolbox/$tool" > /dev/null

    [ ! -f "$jt_local/toolbox/$tool/$tool" ] \
        && fail "Could not unpack '$tool'."
    chmod +x "$jt_local/toolbox/$tool/$tool" }

run () {
    [ -z "$1" ] && fail 'run (): Invalid arg count.'
    tool="$1"
    [ "$tool" = 'all' ] && fail 'run (): Refusing to run all tools.'

    [ ! -f "$jt_local/toolbox/$tool/$tool" ] && build "$tool"

    [ ! -f "$jt_local/toolbox/$tool/$tool" ] \
        && fail "run (): Could not find tool '$tool'."
    "$jt_local/toolbox/$tool/$tool" ${@:2} }

get () {
    fail 'get (): Not yet implemented.' }

internal () {
    case "$1" in
        list)     list ${@:2} ;;
        download) download ${@:2} ;;
        build)    build ${@:2} ;;
        run)      run ${@:2} ;;
        get)      get ${@:2} ;;

        *) fail "internal (): Unknown command '$1'." ;;
    esac }


[ "$1" = 'internal' ] && internal ${@:2} && exit 0
run $@
