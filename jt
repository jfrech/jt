#! /bin/zsh

jt_repository=""
jt_local="$(dirname "$0")"


require () {
    for cmd in "$@"; do
        [ -z "$(command -v $cmd)" ] && echo "Please install '$cmd'." && exit 1
    done }

require printf echo
require realpath dirname mkdir rm rmdir mv chmod
require grep sed
require curl tar
require make gcc


tool="$1"

fail () {
    echo "Trying to call tool '$tool': $1"
    exit 1 }

download () {
    mkdir -p "$jt_local/toolbox/"
    curl --fail --silent "$jt_repository/toolbox/$tool.tar.gz" \
        > "$jt_local/toolbox/$tool.tar.gz" \
        || fail "Could not curl '$jt_repository/toolbox/$tool.tar.gz'." }

unpack () {
    [ ! -f "$jt_local/toolbox/$tool.tar.gz" ] \
        && fail "Could not find '$jt_local/toolbox/$tool.tar.gz'."
    [ -e "$jt_local/toolbox/$tool" ] \
        && fail "Could not unpack '$tool'" \
            "since '$jt_local/toolbox/$tool' already exists."

    tar -xf "$jt_local/toolbox/$tool.tar.gz" -C "$jt_local/toolbox"
    [ -f "$jt_local/toolbox/$tool/Makefile" ] \
        && make -C "$jt_local/toolbox/$tool" > /dev/null

    [ ! -f "$jt_local/toolbox/$tool/$tool" ] \
        && fail "Could not unpack '$tool'."
    chmod +x "$jt_local/toolbox/$tool/$tool" }

run () {
    [ ! -f "$jt_local/toolbox/$tool/$tool" ] \
        && fail "Could not find tool '$tool'."
    "$jt_local/toolbox/$tool/$tool" "$@" }

[ -z "$tool" ] && echo "Usage: jt <tool>" && exit 1
[ ! -f "$jt_local/toolbox/$tool.tar.gz" ] && download
[ ! -d "$jt_local/toolbox/$tool" ] && unpack

run "${@:2}"
